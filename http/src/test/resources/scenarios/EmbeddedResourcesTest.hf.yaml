# For parser testing
name: download embedded resources
http:
  host: !concat [ "http://localhost:", !param PORT 8080 ]
  # Do not limit concurrency through default connection limits
  sharedConnections: 17
phases:
- testPhase:
    atOnce:
      users: 1
      duration: 0
      scenario:
        orderedSequences:
        - manual:
          - httpRequest:
              GET: /foobar/index.html
              handler:
                body:
                  parseHtml:
                    onEmbeddedResource:
                      ignoreExternal: true
                      processor:
                      - queue:
                          var: downloadQueue
                          maxSize: 4
                          concurrency: 2
                          sequence: embeddedResource
                          onCompletion:
                            set: allFetched <- true
          - awaitVar: allFetched
        - automatic:
          - unset: allFetched
          - httpRequest:
              GET: /foobar/index.html
              handler:
                body:
                  parseHtml:
                    onEmbeddedResource:
                      fetchResource:
                        maxResources: 16
                        metric:
                        # Drop the query part
                        - ([^?]*)(\?.*)? -> $1
                        onCompletion:
                          set: allFetched <- true
          - awaitVar: allFetched

        # THIS CODE IS LEFT AS A LEGACY ONLY AND SHOULD NOT BE CONSIDERED A BEST-PRACTICE EXAMPLE.
        # Sequence 'automatic' now uses queue, too. Approach shown here is quite fragile
        # as there's no direct relation between the downloadUrl and newSequence indices;
        # this works even in case of chunked transfer only because both ArrayRecorder and NewSequence
        # always pick lowest available index and completion handler in embeddedResourceForArray unsets
        # the downloadUrl[.]
        - legacy:
          - setInt: completionLatch <- 0
          - httpRequest:
              GET: /foobar/index.html
              handler:
                body:
                  parseHtml:
                    onEmbeddedResource:
                      ignoreExternal: true
                      processor:
                      - addToInt: completionLatch += 1
                      - array: downloadUrl[16]
                      - newSequence: legacyEmbeddedResource
          - awaitInt:
              var: completionLatch
              equalTo: 0
        sequences:
        - embeddedResource[2]:
          - httpRequest:
              GET:
                fromVar: downloadQueue[.]
              metric:
              # Use full url for those matching pattern
              - .*.js
              - .*.ico
              - .*.css
              # Truncate query parameters but keep the base
              - (.*.php).* -> $1
              # Default match (otherwise it would be sequence name)
              - -> other
        - legacyEmbeddedResource[16]:
          - httpRequest:
              GET:
                fromVar: downloadUrl[.]
              metric:
              # Use full url for those matching pattern
              - .*.js
              - .*.ico
              - .*.css
              # Truncate query parameters but keep the base
              - (.*.php).* -> $1
              # Default match (otherwise it would be sequence name)
              - -> other
              handler:
                onCompletion:
                # See 'manual' sequence comments - the unset action here makes sure that
                # downloadUrl and newSequence indices stay in sync.
                - unset: downloadUrl[.]
                - addToInt: completionLatch -= 1
