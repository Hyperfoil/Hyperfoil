# This can only be executed from X.Y.x branches, e.g., 0.28.x
name: Perform Release
on:
  workflow_dispatch:
env:
  RELEASE_BRANCH: 0.27.x
jobs:
  build-and-release:
    name: Build & Release
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: CI
      NO_DOWNLOAD_MESSAGE: "-B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
      QUAY_BOT_LOGIN: ${{secrets.QUAY_BOT_LOGIN}}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.RELEASE_BRANCH }}
          ssh-key: ${{ secrets.SSH_RELEASE_KEY }}
      # Import GPG key for artifact signing
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.SIGN_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.SIGN_GPG_PASSPHRASE }}
      - name: List keys
        run: gpg -K
      # Setup java with proper settings
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Maven Version
        run: mvn --version
      - name: Login to Quay.io
        if: env.QUAY_BOT_LOGIN != ''
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_BOT_LOGIN }}
          password: ${{ secrets.QUAY_BOT_PASSWORD }}
      - name: Setup git with rh-appservices-perf account
        run: |
          git config --global user.email "rhappservicesperf@gmail.com"
          git config --global user.name "rh-appservices-perf"
      # Build Hyperfoil and perform release
      - name: Build & Release to Maven
        run: |
          # Compute current release version and next development one
          PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dexpression=project.version -q -DforceStdout)
          CUR_VER=$(echo ${PROJECT_VERSION} | awk -F '-' '{ print $1}' | awk -F'.' '{print $1+0"."$2+0"."$3+0}' | sed s/[.]$//)
          NEXT_VER=$(echo ${PROJECT_VERSION} | awk -F '-' '{ print $1}' | awk -F'.' '{print $1+0"."$2+0"."$3+1"-SNAPSHOT"}' | sed s/[.]$//)
          echo "CUR_VER=$CUR_VER" >> "$GITHUB_ENV"
          echo "Preparing the release and creating container image"
          mvn -B -ntp release:clean release:prepare -Prelease -Pbuild-image -Dtag=hyperfoil-all-$CUR_VER -DreleaseVersion=$CUR_VER -DdevelopmentVersion=$NEXT_VER -Dresume=false
          echo "Performing the release and pushing artifacts"
          mvn -B -ntp release:perform -Prelease
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_PORTAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_PORTAL_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SIGN_GPG_PASSPHRASE }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
          CI: true

      - name: Create the GitHub Release
        if: startsWith(github.ref, 'refs/tags/hyperfoil-all-')
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: hyperfoil-all-${{ env.CUR_VER }}
          name: hyperfoil-all-${{ env.CUR_VER }}
          draft: false
          prerelease: false
          generate_release_notes: true
          # Additional distribution zip asset
          files: distribution/target/hyperfoil-${{ env.CUR_VER }}.zip

      # Push the tagged image
      - name: Push image version ${{ env.CUR_VER }}
        if: env.QUAY_BOT_LOGIN != ''
        run: docker push quay.io/hyperfoil/hyperfoil:${{ env.CUR_VER }}

      # Push the latest tag
      - name: Push the latest tag
        if: env.QUAY_BOT_LOGIN != ''
        run: docker push quay.io/hyperfoil/hyperfoil:latest
