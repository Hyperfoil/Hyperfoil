scenario:
  # Start of sequence 1
  - http-request:
      method: GET
      path: /fleet
      body-extractors:
      - type: json
        query: ".ships[].name"
        processor:
          type: defrag
          delegate:
            type: array-recorder
            var: "shipNames"
            max-size: 16
  - task:
      run:
      - set:
          var: "numberOfSunkShips"
          value: 0
  # End of sequence 1
# All sequence instances get blocked until shipNames becomes available
  - for-each:
      source-var: "shipNames"
      tasks:
      # Start of sequence 2
      - httpRequest:
          name: "fetch-crew"
          method: GET
          # $$ represents the current task/sequence id
          path: "/ship?name=${shipNames[$$]}"
          body-extractors:
          - type: json
            query: ".crew[]"
            processor:
              type: counter-array-recorder
              var: "crewCount"
              index-var: "$$" # todo maybe this should be default
              max-size: 16
      # Early sequence termination is possible
      - break-sequence:
          conditions:
          - evaluate: "${crewCount[$$]} > 0"
      - set:
          var: "numberOfSunkShips"
          valueFrom:
            type: evaluate
            expr: "${numberOfSunkShips} + 1"
      - httpRequest:
          name: "delete-ship"
          method: DELETE
          path: "/ship?name=${shipNames[$$]}"
          status-validators:
          - check-status: 204
          status-extractors:
          - exec-extractor:
              run:
              - set:
                  var: "numberOfSunkShips"
                  valueFrom:
                    type: evaluate
                    expr: "${numberOfSunkShips} - 1"
      # End of sequence 2
  # End here is the last sequence nr. 3
  - task:
     name: "await-sunk"
     run:
     - await-int:
         condition:
           evaluate: "${numberOfSunkShips} <= 0"
