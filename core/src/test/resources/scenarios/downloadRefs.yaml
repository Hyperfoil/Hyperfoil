# For parser testing
name: download embedded resources
simulation:
  http:
    baseUrl: http://localhost:8080
  phases:
  - testPhase:
      atOnce:
        users: 1
        duration: 0
        scenario:
          orderedSequences:
          - automatic:
            - httpRequest:
                GET: /foobar/index.html
                handler:
                  body:
                    parseHtml:
                      onEmbeddedResource:
                        fetchResource:
                          maxResources: 16
                          statistics:
                          # Drop the query part
                          - ([^?]*)(\?.*)? -> $1
                          onCompletion:
                            set: allFetched <- true
            - awaitVar: allFetched
          - manual:
            - httpRequest:
                GET: /foobar/index.html
                handler:
                  body:
                    parseHtml:
                      onEmbeddedResource:
                        ignoreExternal: true
                        processor:
                          newSequence:
                           maxSequences: 16
                           counterVar: downloadCounter
                           dataVar: downloadUrl
                           template: embeddedResource
            # This probably won't wait for the embedded resources as the requests are not sent yet
            - awaitAllResponses
          sequences:
          - embeddedResource:
            - httpRequest:
               GET:
                 sequenceVar: downloadUrl
               statistics:
               # Use full url for those matching pattern
               - .*.js
               - .*.ico
               - .*.css
               # Truncate query parameters but keep the base
               - (.*.php).* -> $1
               # Default match (otherwise it would be sequence name)
               - -> other
               handler:
                 onCompletion:
                   unset:
                     sequenceVar: downloadUrl
            - awaitSequenceVar: "!downloadUrl"
