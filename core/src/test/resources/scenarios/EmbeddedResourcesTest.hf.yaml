# For parser testing
name: download embedded resources
http:
  host: http://localhost:8080
phases:
- testPhase:
    atOnce:
      users: 1
      duration: 0
      scenario:
        orderedSequences:
        - automatic:
          - httpRequest:
              GET: /foobar/index.html
              handler:
                body:
                  parseHtml:
                    onEmbeddedResource:
                      fetchResource:
                        maxResources: 16
                        metric:
                        # Drop the query part
                        - ([^?]*)(\?.*)? -> $1
                        onCompletion:
                          set: allFetched <- true
          - awaitVar: allFetched
          - clearHttpCache # otherwise we wouldn't download index second time
        - manual:
          - setInt: completionLatch <- 0
          - httpRequest:
              GET: /foobar/index.html
              handler:
                body:
                  parseHtml:
                    onEmbeddedResource:
                      ignoreExternal: true
                      processor:
                      - addToInt: completionLatch += 1
                      - array: downloadUrl[16]
                      - newSequence:
                          maxSequences: 16
                          sequence: embeddedResourceForArray
          - awaitInt:
              var: completionLatch
              equalTo: 0
          - clearHttpCache # otherwise we wouldn't download index third time
        - queued:
          - unset: allFetched
          - httpRequest:
              GET: /foobar/index.html
              handler:
                body:
                  parseHtml:
                    onEmbeddedResource:
                      ignoreExternal: true
                      processor:
                      - queue:
                          var: downloadQueue
                          maxSize: 256
                          concurrency: 8
                          sequence: embeddedResourceForQueue
                          onCompletion:
                            set: allFetched <- true
          - awaitVar: allFetched
        sequences:
        - embeddedResourceForArray[16]:
          - httpRequest:
              GET:
                fromVar: downloadUrl[.]
              metric:
              # Use full url for those matching pattern
              - .*.js
              - .*.ico
              - .*.css
              # Truncate query parameters but keep the base
              - (.*.php).* -> $1
              # Default match (otherwise it would be sequence name)
              - -> other
              handler:
                onCompletion:
                  addToInt: completionLatch -= 1
        # We need different sequences as both array in downloadUrl
        # and queue in downloadQueue are pre-allocated and we cannot reuse the var
        - embeddedResourceForQueue[8]:
          - httpRequest:
              GET:
                fromVar: downloadQueue[.]
              metric:
              # Use full url for those matching pattern
              - .*.js
              - .*.ico
              - .*.css
              # Truncate query parameters but keep the base
              - (.*.php).* -> $1
              # Default match (otherwise it would be sequence name)
              - -> other
