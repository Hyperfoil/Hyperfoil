name: acmeair-rampup-1000
threads: 4
ergonomics:
  privateHttpPools: true
http:
  host: http://acme.dcperf-d9b3841533db4f254358c882d880c89b-0000.us-east.containers.appdomain.cloud
  sharedConnections: 5000
phases:
- flightRampUp:
    rampPerSec:
      duration: 2m
      initialUsersPerSec: 1
      targetUsersPerSec: 500
      maxSessions: 5000
      scenario: &queryFlight
      - queryFlight:
        - randomItem:
            file: AirportsFrom.txt
            toVar: fromCode
        - randomItem:
            file: AirportsTo.txt
            toVar: toCode
        - flightDates:
            fromDate: departureDate
            returnDate: returnDate
        - httpRequest:
            POST:
              value: /flight/queryflights
            body:
              form:
              - name: fromAirport
                pattern: ${fromCode}
              - name: toAirport
                pattern: ${toCode}
              - name: fromDate
                pattern: ${departureDate}
              - name: returnDate
                pattern: ${returnDate}
              - name: oneWay
                value: true
            handler:
              body:
                closeConnection: {}
        - thinkTime:
            duration: 5s

- profileRampUp:
    rampPerSec:
      duration: 2m
      initialUsersPerSec: 1
      targetUsersPerSec: 50
      maxSessions: 2500
      scenario: &updateProfile
        initialSequences:
        - login:
          - randomInt:
              min: 0
              #9999 for 10000 users
              max: 9999
              toVar: userId
          - httpRequest:
              POST:
                value: /auth/login
              body:
                form:
                - name: login
                  pattern: uid${userId}@email.com
                - name: password
                  value: password
              handler:
                header:
                  - cookie:
                      name: jwt_token
                      toVar: jwtToken
          - nextSequence: viewProfile
        sequences:
        - viewProfile:
          - thinkTime:
              duration: 5s
          - httpRequest:
              headers:
                Authorization:
                  pattern: Bearer ${jwtToken}
              GET:
                pattern: /customer/byid/uid${userId}@email.com
              handler:
                body:
                  closeConnection: {}

- bookingRampUp:
    rampPerSec:
      duration: 2m
      initialUsersPerSec: 1
      targetUsersPerSec: 100
      maxSessions: 5000
      scenario: &flightBooking
        initialSequences:
        - queryFlight:
          - randomItem:
              file: AirportsFrom.txt
              toVar: bookingFromCode
          - randomItem:
              file: AirportsTo.txt
              toVar: bookingToCode
          - set: isOneWay <- false
          - flightDates:
              fromDate: bookingDepartureDate
              returnDate: bookingReturnDate
          - httpRequest:
              POST:
                value: /flight/queryflights
              body:
                form:
                - name: fromAirport
                  pattern: ${bookingFromCode}
                - name: toAirport
                  pattern: ${bookingToCode}
                - name: fromDate
                  pattern: ${bookingDepartureDate}
                - name: returnDate
                  pattern: ${bookingReturnDate}
                - name: oneWay
                  pattern: ${isOneWay}
              handler:
                body:
                - default:
                    processor:
                      simple:
                        toVar: flights
                        format: STRING
          - flightProcessor:
              fromVar: flights
              isAvailable: available
              toFlightId: outboundFlightId
              toFlightSegId: outboundFlgihtNumber
              retFlightId: inboundFlightId
              retFlightSegId: inboundFlightNumber
              oneWay : isOneWay
          - breakSequence:
               intCondition:
                 fromVar: available
                 equalTo: 0
          - nextSequence: login
        sequences:
        - login:
          - thinkTime:
              duration: 5s
          - randomInt:
              min: 0
              #9999 for 10000 users
              max: 9999
              toVar: bookingUserId
          - httpRequest:
              POST:
                value: /auth/login
              body:
                form:
                - name: login
                  pattern: uid${bookingUserId}@email.com
                - name: password
                  value: password
              handler:
                header:
                  - cookie:
                      name: jwt_token
                      toVar: bookingJwtToken
          - nextSequence: bookFlights
        - bookFlights:
          - thinkTime:
              duration: 3s
          - httpRequest:
              headers:
                Authorization:
                  pattern: Bearer ${bookingJwtToken}
              POST:
                value: /booking/bookflights
              body:
                form:
                - name: userid
                  pattern: uid${bookingUserId}@email.com
                - name: toFlightId
                  pattern: ${outboundFlightId}
                - name: toFlightSegId
                  pattern: ${outboundFlgihtNumber}
                - name: retFlightId
                  pattern: ${inboundFlightId}
                - name: retFlightSegId
                  pattern: ${inboundFlightNumber}
                - name: oneWayFlight
                  pattern: ${isOneWay}
              handler:
                body:
                  closeConnection: {}

- FLIGHT_SEARCH:
    constantPerSec:
      duration: 2m
      usersPerSec: 500
      maxSessions: 5000
      startAfter: flightRampUp
      scenario: *queryFlight

- PROFILE_UPDATE:
    constantPerSec:
      duration: 2m
      usersPerSec: 50
      maxSessions: 2500
      startAfter: flightRampUp
      scenario: *updateProfile

- BOOKING_FLIGHT:
    constantPerSec:
      duration: 2m
      usersPerSec: 100
      maxSessions: 5000
      startAfter: flightRampUp
      scenario: *flightBooking

- BOOKING_CANCEL:
    constantPerSec:
      duration: 2m
      usersPerSec: 250
      maxSessions: 2500
      startAfter: flightRampUp
      scenario:
        initialSequences:
        - login:
          - randomInt:
              min: 0
              #9999 for 10000 users
              max: 9999
              toVar: cancelUserId
          - httpRequest:
              POST:
                value: /auth/login
              body:
                form:
                - name: login
                  pattern: uid${cancelUserId}@email.com
                - name: password
                  value: password
              handler:
                header:
                  - cookie:
                      name: jwt_token
                      toVar: cancelJwtToken
          - nextSequence: listBooking
        sequences:
        - listBooking:
          - thinkTime:
              duration: 5s
          - httpRequest:
              headers:
                Authorization:
                  pattern: Bearer ${cancelJwtToken}
              GET:
                pattern: /booking/byuser/uid${cancelUserId}@email.com
              handler:
                body:
                  json:
                    query: .[]
                    processor:
                      array:
                        toVar: bookings
                        format: BYTES
                        maxSize: 100
          - foreach:
              fromVar: bookings
              sequence: cancelBooking
        - cancelBooking:
          - thinkTime:
              duration: 5s
          - json:
              fromVar: bookings[.]
              query: ._id
              toVar: id
          - httpRequest:
              headers:
                Authorization:
                  pattern: Bearer ${cancelJwtToken}
              POST:
                value: /booking/cancelbooking
              body:
                form:
                - name: userid
                  pattern: uid${cancelUserId}@email.com
                - name: number
                  pattern: ${id}
              handler:
                body:
                  closeConnection: {}
